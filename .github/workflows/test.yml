name: Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    # Run tests every Monday at 00:00 UTC
    - cron: '0 0 * * 1'

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: short
  RUSTUP_MAX_RETRIES: 10

jobs:
  # Comprehensive test matrix
  test-matrix:
    name: Test Suite - ${{ matrix.os }} / ${{ matrix.rust }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust: [stable, beta, nightly]
        exclude:
          # Only test beta/nightly on Linux to save CI time
          - os: windows-latest
            rust: beta
          - os: windows-latest
            rust: nightly
          - os: macos-latest
            rust: beta
          - os: macos-latest
            rust: nightly
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      
      - name: Setup Cache
        uses: Swatinem/rust-cache@v2
        with:
          key: test-${{ matrix.os }}-${{ matrix.rust }}
      
      # Install test dependencies
      - name: Install mosquitto (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y mosquitto mosquitto-clients
          sudo systemctl start mosquitto
      
      - name: Install mosquitto (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install mosquitto
          brew services start mosquitto
      
      - name: Install mosquitto (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install mosquitto -y --no-progress
          Start-Service mosquitto
        shell: pwsh
      
      # Run tests with different feature combinations
      - name: Test default features
        run: cargo test
      
      - name: Test all features
        run: cargo test --all-features
      
      - name: Test no default features
        run: cargo test --no-default-features
      
      - name: Test with release mode
        run: cargo test --release
      
      # Run doc tests
      - name: Doc tests
        run: cargo test --doc --all-features

  # Integration tests
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    services:
      mosquitto:
        image: eclipse-mosquitto:latest
        ports:
          - 1883:1883
        options: >-
          --health-cmd "mosquitto_sub -t '$$SYS/broker/version' -C 1 -E"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      
      - name: Run integration tests
        env:
          MQTT_HOST: localhost
          MQTT_PORT: 1883
        run: |
          cargo test --test '*' -- --nocapture

  # Coverage report
  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      
      - name: Install tarpaulin
        run: cargo install cargo-tarpaulin --locked
      
      - name: Install mosquitto
        run: |
          sudo apt-get update
          sudo apt-get install -y mosquitto mosquitto-clients
          sudo systemctl start mosquitto
      
      - name: Generate coverage
        run: |
          cargo tarpaulin --verbose --all-features --workspace --timeout 300 --out xml
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

  # MSRV (Minimum Supported Rust Version) check
  msrv:
    name: MSRV Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      # Extract MSRV from Cargo.toml if specified
      - name: Extract MSRV
        id: msrv
        run: |
          MSRV=$(grep -E "^rust-version" Cargo.toml | sed -E 's/.*"([0-9.]+)".*/\1/')
          if [ -z "$MSRV" ]; then
            MSRV="1.70.0"  # Default MSRV
          fi
          echo "version=$MSRV" >> $GITHUB_OUTPUT
      
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ steps.msrv.outputs.version }}
      
      - uses: Swatinem/rust-cache@v2
      
      - name: Check MSRV
        run: cargo check --all-features

  # Benchmarks (optional, runs but doesn't fail CI)
  benchmarks:
    name: Benchmarks
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      
      - name: Install mosquitto
        run: |
          sudo apt-get update
          sudo apt-get install -y mosquitto mosquitto-clients
          sudo systemctl start mosquitto
      
      - name: Run benchmarks
        run: |
          cargo bench --no-run
          cargo bench -- --quick

  # Success gate
  test-success:
    name: Tests Success
    if: success()
    needs:
      - test-matrix
      - integration-tests
      - coverage
      - msrv
    runs-on: ubuntu-latest
    steps:
      - name: Tests succeeded
        run: exit 0